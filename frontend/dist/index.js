(()=>{"use strict";var __webpack_modules__={623:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval("\n;// CONCATENATED MODULE: ./src/js/core/Component.js\nclass Component {\n  constructor(tag, $parent) {\n    let props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let beforeElem = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    this.$target = document.createElement(tag);\n\n    if (props.class) {\n      this.$target.classList.add(...props.class);\n    }\n\n    if (props.dataset) {\n      for (const [key, value] of Object.entries(props.dataset)) {\n        this.$target.dataset[key] = value;\n      }\n    }\n\n    this.props = props;\n    this.state = {};\n    this.setup();\n    this.setEvent(); // constructor 에서 딱 한번만 실행.\n\n    this.render();\n\n    if (!beforeElem) {\n      $parent.appendChild(this.$target);\n    } else if (typeof beforeElem === 'string') {\n      console.log($parent.querySelector(beforeElem));\n      $parent.insertBefore(this.$target, $parent.querySelector(beforeElem));\n    } else {\n      $parent.insertBefore(this.$target, beforeElem);\n    }\n  }\n\n  clearChildren() {\n    this.$target.innerHTML = this.template();\n  }\n\n  setChildren() {}\n\n  setup() {} // 컴포넌트 생성 시 딱 한번만 실행\n\n\n  mounted() {} // render 후에 실행되는 부분\n\n\n  template() {\n    return '';\n  } // 컴포넌트 템플릿\n\n\n  render() {\n    // 렌더링\n    this.$target.innerHTML = this.template();\n    this.setChildren();\n    this.mounted(); // render 후에 mounted 가 실행된다.\n  }\n\n  setEvent() {}\n\n  setState(newState) {\n    // 상태변경되면 리렌더링\n    this.state = { ...this.state,\n      ...newState\n    };\n    this.render();\n  }\n\n  addEvent(eventType, selector, callback) {\n    const children = [...this.$target.querySelectorAll(selector)]; // selector에 명시한 것 보다 더 하위 요소가 선택되는 경우가 있을 땐\n    // closest를 이용하여 처리한다.\n\n    const isTarget = target => children.includes(target) || target.closest(selector);\n\n    this.$target.addEventListener(eventType, event => {\n      if (!isTarget(event.target)) return false;\n      callback(event);\n    });\n  }\n\n}\n\n/* harmony default export */ const core_Component = (Component);\n;// CONCATENATED MODULE: ./src/js/components/Header.js\n\n\nclass Header extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  template() {\n    return `<h1>TO-DO LIST</h1>\n    <button class=\"menu\"></button>`;\n  }\n\n  setEvent() {\n    this.addEvent('click', '.menu', this.props.onClick);\n  }\n\n}\n\n/* harmony default export */ const components_Header = (Header);\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n;// CONCATENATED MODULE: ./mock/mock.js\nconst processedData = {\n  1: {\n    title: '해야할 일',\n    todos: [{\n      id: '1',\n      title: '코딩하기',\n      content: '코딩을 사랑해',\n      column_id: '1',\n      index: '0'\n    }, {\n      id: '4',\n      title: '코딩하기',\n      content: '코딩을 사랑해',\n      column_id: '1',\n      index: '1'\n    }, {\n      id: '5',\n      title: '춤추기',\n      content: '하이',\n      column_id: '1',\n      index: '2'\n    }]\n  },\n  2: {\n    title: '진행중인 일',\n    todos: [{\n      id: '2',\n      title: '코딩하기',\n      content: '코딩을 사랑해',\n      column_id: '2',\n      index: '0'\n    }]\n  },\n  3: {\n    title: '완료된 일',\n    todos: [{\n      id: '3',\n      title: '코딩하기',\n      content: '코딩을 사랑해',\n      column_id: '3',\n      index: '0'\n    }, {\n      id: '6',\n      title: '커피사기',\n      content: '내일까지 프론트',\n      column_id: '3',\n      index: '1'\n    }]\n  }\n};\nconst logData = [{\n  id: '1',\n  type: 'move',\n  userName: '한진탁',\n  toDoTitle: '코딩하기',\n  toDoColumnId: '1',\n  nextToDoColumnId: '2',\n  date: new Date()\n}, {\n  id: '2',\n  type: 'remove',\n  userName: '이주암',\n  toDoTitle: '밥먹기',\n  toDoColumnId: '1',\n  nextToDoColumnId: null,\n  date: new Date('2022-07-11T03:24:00')\n}, {\n  id: '3',\n  type: 'add',\n  userName: '한진탁',\n  toDoTitle: '운동하기',\n  toDoColumnId: '1',\n  nextToDoColumnId: null,\n  date: new Date()\n}, {\n  id: '4',\n  type: 'move',\n  userName: '이주암',\n  toDoTitle: '공부하기',\n  toDoColumnId: '2',\n  nextToDoColumnId: '1',\n  date: new Date()\n}, {\n  id: '5',\n  type: 'add',\n  userName: '한진탁',\n  toDoTitle: '쇼핑하기',\n  toDoColumnId: '3',\n  nextToDoColumnId: null,\n  date: new Date()\n}];\n/* harmony default export */ const mock = (processedData);\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/TodoColumn/TodoColumnHeader.js\n\n\nclass TodoColumnHeader extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  template() {\n    return `\n\t\t<div>\n\t\t\t<h3>${this.props.title}</h3>\n\t\t\t<span class=\"count\">${this.props.count}</span>\n\t\t</div>\n\t\t<div>\n\t\t\t<button class='todo-add-btn'></button>\n\t\t\t<button class='column-remove-btn'</button>\n\t\t</div>\n\t`;\n  }\n\n}\n\n/* harmony default export */ const TodoColumn_TodoColumnHeader = (TodoColumnHeader);\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/TodoColumn/TodoCard.js\n\n\nclass TodoCard extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  template() {\n    const {\n      title,\n      content\n    } = this.props.todo;\n    return `\n    <header>\n      <h4>${title}</h4>\n      <button class=\"card-close-btn\"></button>\n    </header>\n    <p class=\"card-content\">${content}</p>\n    <p class=\"card-author\">author by web</p>\n\t`;\n  }\n\n}\n\n/* harmony default export */ const TodoColumn_TodoCard = (TodoCard);\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/TodoColumn/TodoList.js\n\n\n\nclass TodoList extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  setChildren() {\n    const {\n      todos\n    } = this.props;\n    todos.forEach(todo => new TodoColumn_TodoCard('li', this.$target, {\n      class: ['todo-card'],\n      todo,\n      dataset: {\n        todoId: todo.id,\n        index: todo.index\n      }\n    }));\n  }\n\n}\n\n/* harmony default export */ const TodoColumn_TodoList = (TodoList);\n;// CONCATENATED MODULE: ./src/js/events/todoDragEvent.js\nlet ghost;\nlet subTarget;\nfunction moveAt(target, pageX, pageY) {\n  target.style.left = pageX - target.offsetWidth / 2 + 'px';\n  target.style.top = pageY - target.offsetHeight / 2 + 'px';\n}\nfunction onMouseMove(target) {\n  ghost = target.cloneNode(true);\n  ghost.classList.add('ghost');\n  subTarget = target.cloneNode(true);\n  subTarget.classList.add('afterimage', 'subTarget');\n  document.body.appendChild(ghost);\n  ghost.style.display = 'none';\n  return event => {\n    var _subTarget$previousEl, _subTarget$nextElemen;\n\n    target.classList.add('afterimage');\n    ghost.style.position = 'absolute';\n    ghost.style.display = 'list-item';\n    ghost.style.zIndex = 1000;\n    ghost.style.width = window.getComputedStyle(target).width;\n    ghost.style.zIndex = window.getComputedStyle(target).height;\n    moveAt(ghost, event.pageX, event.pageY);\n    let [belowCard, todoList] = getPosition(event);\n\n    if (!todoList) {\n      var _subTarget$parentNode;\n\n      (_subTarget$parentNode = subTarget.parentNode) === null || _subTarget$parentNode === void 0 ? void 0 : _subTarget$parentNode.removeChild(subTarget);\n      return;\n    }\n\n    if (belowCard !== null && belowCard !== void 0 && belowCard.classList.contains('afterimage')) {\n      return;\n    }\n\n    if (!belowCard) {\n      todoList.appendChild(subTarget);\n      return;\n    }\n\n    if (dropPointIsUpper(belowCard, event.clientY)) {\n      todoList.insertBefore(subTarget, belowCard);\n    } else {\n      todoList.insertBefore(subTarget, belowCard.nextElementSibling);\n    }\n\n    if ((_subTarget$previousEl = subTarget.previousElementSibling) !== null && _subTarget$previousEl !== void 0 && _subTarget$previousEl.classList.contains('afterimage') || (_subTarget$nextElemen = subTarget.nextElementSibling) !== null && _subTarget$nextElemen !== void 0 && _subTarget$nextElemen.classList.contains('afterimage')) {\n      subTarget.parentNode.removeChild(subTarget);\n      return;\n    }\n  };\n}\n\nfunction getPosition(e) {\n  let belowCard;\n  ghost.style.display = 'none';\n  let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n  ghost.style.display = 'list-item';\n  let todoList = getTodoList(elemBelow);\n\n  if (!todoList) {\n    return [belowCard, todoList];\n  }\n\n  if (elemBelow.closest('.todo-card')) {\n    belowCard = elemBelow.closest('.todo-card');\n  } else {\n    belowCard = getClosestCardElement(todoList.childNodes, e.clientY);\n  }\n\n  return [belowCard, todoList];\n}\n\nfunction mouseUp(e) {\n  let prevColumnId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  let [belowCard, todoList] = getPosition(e);\n\n  if (!todoList) {\n    document.body.removeChild(ghost);\n    return false;\n  }\n\n  ghost.removeAttribute('style');\n  ghost.parentNode.removeChild(ghost);\n  ghost = null;\n\n  if (!subTarget.parentNode) {\n    return false;\n  }\n\n  subTarget.classList.remove('afterimage');\n  subTarget.classList.remove('subTarget');\n  const index = getIndex(subTarget, prevColumnId);\n  const nextTodoList = subTarget.closest('.todo-list');\n  subTarget.dataset.index = index;\n  subTarget = null;\n  return [String(index), nextTodoList];\n}\n\nfunction getIndex(subTarget, prevColumnId) {\n  var _subTarget$nextElemen2;\n\n  const currentColumnId = subTarget.closest('.column').dataset.columnId;\n  let result = (_subTarget$nextElemen2 = subTarget.nextElementSibling) === null || _subTarget$nextElemen2 === void 0 ? void 0 : _subTarget$nextElemen2.dataset.index;\n\n  if (!result) {\n    result = currentColumnId === prevColumnId ? subTarget.parentNode.childNodes.length - 2 : subTarget.parentNode.childNodes.length - 1;\n  }\n\n  return result;\n}\n\nfunction getTodoList(elemBelow) {\n  if (!elemBelow) {\n    return null;\n  }\n\n  if (elemBelow.closest('.column ul')) {\n    return elemBelow.closest('.column ul');\n  }\n\n  if (elemBelow.classList.contains('column')) {\n    return elemBelow.querySelector('ul');\n  }\n\n  return null;\n}\n\nfunction getClosestCardElement(todoList, dropYPoint) {\n  const closestCard = {\n    offset: Number.POSITIVE_INFINITY,\n    element: null\n  };\n  todoList.forEach(card => {\n    const box = card.getBoundingClientRect();\n    const boxMidYPoint = box.top + box.height / 2;\n    const offset = Math.abs(dropYPoint - boxMidYPoint);\n\n    if (offset < closestCard.offset) {\n      closestCard.offset = offset;\n      closestCard.element = card;\n    }\n  });\n  return closestCard.element;\n}\n\nfunction dropPointIsUpper(belowCard, currentY) {\n  const box = belowCard.getBoundingClientRect();\n  const boxMidPoint = box.top + box.height / 2;\n  const offset = currentY - boxMidPoint;\n  return offset < 0;\n}\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/TodoColumn/TodoColumn.js\n\n\n\n\n\nclass TodoColumn extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  setChildren() {\n    const {\n      title,\n      todos\n    } = this.props.columnData;\n    new TodoColumn_TodoColumnHeader('header', this.$target, {\n      title,\n      count: todos.length,\n      showTodoAddForm: this.props.showTodoAddForm\n    });\n    new TodoColumn_TodoList('ul', this.$target, {\n      class: ['todo-list'],\n      todos: todos.sort((a, b) => a.index - b.index)\n    });\n  }\n\n  setEvent() {\n    this.addEvent('mouseover', '.card-close-btn', e => {\n      const targetCard = e.target.closest('.todo-card');\n      targetCard.classList.add('warning');\n    });\n    this.addEvent('mouseout', '.card-close-btn', e => {\n      const targetCard = e.target.closest('.todo-card');\n      targetCard.classList.remove('warning');\n    });\n    this.addEvent('mousedown', '.column', e => {\n      if (e.detail !== 1) return;\n      const todoCard = e.target.closest('.todo-card');\n\n      if (!todoCard || e.target.tagName === 'BUTTON') {\n        return;\n      }\n\n      const handleMouseMove = onMouseMove(todoCard);\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', e => {\n        todoCard.classList.remove('afterimage');\n        document.removeEventListener('mousemove', handleMouseMove);\n        const ghost = document.querySelector('.ghost');\n        const subTarget = document.querySelector('.subTarget');\n\n        if (ghost && subTarget) {\n          const prevColumnId = todoCard.closest('.column').dataset.columnId;\n          const currentTodoId = todoCard.dataset.todoId;\n          const DIV = document.createElement('div');\n          const UL = todoCard.parentNode;\n          const belowNode = [];\n          let flag = false;\n          DIV.classList.add('card-pocket');\n          UL.insertBefore(DIV, todoCard.nextElementSibling);\n          todoCard.classList.add('fade');\n          todoCard.parentNode.childNodes.forEach(item => {\n            if (item.tagName === 'DIV') return;\n            flag && belowNode.push(item);\n\n            if (item.classList.contains('fade')) {\n              flag = true;\n            }\n          });\n          belowNode.forEach(node => DIV.appendChild(node));\n          DIV.style.transform = `translateY(-${todoCard.offsetHeight}px)`;\n          document.body.style.pointerEvents = 'none';\n          const xDiff = ghost.getBoundingClientRect().x - subTarget.getBoundingClientRect().x;\n          const yDiff = ghost.getBoundingClientRect().y - subTarget.getBoundingClientRect().y;\n          ghost.style.transform = `translate(${xDiff * -1}px, ${yDiff * -1}px)`;\n          setTimeout(() => {\n            const nodeList = [];\n            let index;\n            let nextTodoList;\n            DIV.childNodes.forEach(node => {\n              nodeList.push(node);\n            });\n            nodeList.forEach(node => UL.insertBefore(node, UL.querySelector('.card-pocket')));\n            DIV.parentNode.removeChild(DIV);\n            document.body.removeAttribute('style');\n            [index, nextTodoList] = mouseUp(e, prevColumnId);\n\n            if (!index) {\n              return;\n            }\n\n            nextTodoList.childNodes.forEach(node => {\n              if (index < node.dataset.index) {\n                node.dataset.index = String(Number(node.dataset.index) + 1);\n              }\n\n              if (node.dataset.index === index) {\n                index -= 1;\n                return;\n              }\n\n              if (index < node.dataset.index) {\n                node.dataset.index = String(Number(node.dataset.index) + 1);\n              }\n            });\n            this.props.onDragEnd(todoCard.dataset.todoId, prevColumnId, nextTodoList.closest('.column').dataset.columnId);\n            todoCard.parentNode.removeChild(todoCard);\n          }, 500);\n          return;\n        }\n\n        if (!mouseUp(e)[0]) {\n          return;\n        }\n\n        console.log('??');\n        todoCard.parentNode.removeChild(todoCard);\n      }, {\n        once: true\n      });\n    });\n  }\n\n}\n\n/* harmony default export */ const TodoColumn_TodoColumn = (TodoColumn);\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/TodoAddForm.js\n\n\nclass TodoAddForm extends core_Component {\n  constructor() {\n    super(...arguments);\n    this.$title = this.$target.querySelector('.add-form-title');\n    this.$content = this.$target.querySelector('.add-form-content');\n    this.$submitBtn = this.$target.querySelector('.add-form-submit');\n  }\n\n  template() {\n    const {\n      type,\n      title: originTitle,\n      content: originContent\n    } = this.props;\n    const title = originTitle ?? '';\n    const content = originContent ?? '';\n    const btnName = type === 'edit' ? '수정' : '등록';\n    return `\n\t\t\t\t<input class='add-form-title' type='text' placeholder='제목을 입력하세요' name=\"title\" value=\"${title}\" />\n\t\t\t\t<textarea class='add-form-content' type='text' placeholder='내용을 입력하세요' name=\"content\" maxlength=\"500\">${content}</textarea>\n\t\t\t\t<div>\n\t\t\t\t<button class='add-form-cancel primary-btn--gray' type='button'>취소</button>\n\t\t\t\t<button class='add-form-submit primary-btn--blue' type='submit' disabled=\"true\">${btnName}</button>\n\t\t\t\t </div>\n\t\t`;\n  }\n\n  setEvent() {\n    const isDisabled = _ref => {\n      let {\n        originTitle,\n        originContent,\n        title,\n        content\n      } = _ref;\n      if (!title || !content) return true;else if (originTitle === title && originContent === content) return true;\n      return false;\n    };\n\n    this.addEvent('input', '.add-form-content', e => {\n      e.target.style.height = '16px';\n      e.target.style.height = e.target.scrollHeight + 'px';\n    });\n    ['input', 'textarea'].forEach(type => {\n      this.addEvent('input', type, () => {\n        const {\n          title: originTitle,\n          content: originContent\n        } = this.props;\n        const [title, content] = [this.$title.value.trim(), this.$content.value.trim()];\n\n        if (isDisabled({\n          originTitle,\n          originContent,\n          title,\n          content\n        })) {\n          this.$submitBtn.disabled = true;\n          this.$target.classList.add('blocked');\n        } else {\n          this.$submitBtn.disabled = false;\n          this.$target.classList.remove('blocked');\n        }\n      });\n    });\n  }\n\n}\n\n/* harmony default export */ const TodoContainer_TodoAddForm = (TodoAddForm);\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/modal.js\n\n\nclass Modal extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  template() {\n    return `\n            <div class=\"modal\">\n                <p>선택한 카드를 삭제할까요?</p>\n                <div>\n                    <button class=\"modal-cancel-btn primary-btn--gray\">취소</button> \n                    <button class=\"modal-remove-btn primary-btn--blue\">삭제</button> \n                </div>\n            </div>\n        `;\n  }\n\n  setEvent() {\n    this.addEvent('click', '.modal-cancel-btn', this.props.closeModal);\n    this.addEvent('click', '.modal-remove-btn', this.props.removeCard);\n    this.addEvent('click', '.modal-container', e => {\n      if (e.target.classList.contains('modal-container')) this.props.closeModal();\n    });\n  }\n\n}\n\n/* harmony default export */ const modal = (Modal);\n;// CONCATENATED MODULE: ./src/js/api/todos.js\nfunction addTodo() {\n  return new Promise(res => res(90));\n}\nfunction editTodo(todoId) {\n  return new Promise(res => res(todoId));\n}\nfunction removeTodo(todoId) {\n  return new Promise(res => res(todoId));\n}\nfunction updateTodo() {\n  return new Promise(res => res(123));\n}\n;// CONCATENATED MODULE: ./src/js/components/TodoContainer/TodoContainer.js\n\n\n\n\n\n\n\n\n\nclass TodoContainer extends core_Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"setDragAndDropState\", (todoId, prevColumnId, nextColumnId) => {\n      updateTodo().then(() => {\n        const todoIndex = this.state.columnData[prevColumnId].todos.findIndex(todo => todo.id === todoId);\n        const todo = this.state.columnData[prevColumnId].todos[todoIndex];\n        const prevColumn = this.state.columnData[prevColumnId].todos.filter(todo => {\n          return todo.id !== todoId;\n        });\n        const nextColumn = this.state.columnData[nextColumnId].todos.push(todo);\n        this.state.columnData[prevColumnId].todos = prevColumn;\n        this.setState({ ...this.state\n        });\n      });\n    });\n\n    _defineProperty(this, \"createTodoCard\", _ref => {\n      let {\n        $parent,\n        props = {},\n        $beforeElement\n      } = _ref;\n      const classList = [...(props.class || []), 'todo-card'];\n      const todoId = props.todoId;\n      const index = props.index;\n\n      if (todoId) {\n        // todoId가 있을 때\n        // edit\n        editTodo().then(() => {\n          const elem = new TodoColumn_TodoCard('li', $parent, { ...props,\n            class: classList,\n            dataset: {\n              todoId\n            }\n          }, $beforeElement);\n          const columnId = document.querySelector(`[data-todo-id='${todoId}']`).closest('.column').dataset.columnId;\n          const todo = {\n            id: todoId,\n            title: props.todo.title,\n            content: props.todo.content,\n            columnId,\n            index\n          };\n          let target = this.state.columnData[columnId].todos.findIndex(item => item.id == todoId);\n          this.state.columnData[columnId].todos[target] = { ...todo\n          };\n          this.setState({ ...this.state\n          });\n          this.removePrevCard();\n          this.removeAddForm();\n        });\n      } else {\n        // todoId가 없을 때\n        // add\n        addTodo().then(id => {\n          new TodoColumn_TodoCard('li', $parent, { ...props,\n            class: classList,\n            dataset: {\n              todoId: id\n            }\n          }, $beforeElement);\n          const columnId = document.querySelector(`[data-todo-id='${id}']`).closest('.column').dataset.columnId;\n          const todo = {\n            id: id,\n            title: props.todo.title,\n            content: props.todo.content,\n            columnId,\n            index: this.state.columnData[columnId].todos.length\n          };\n          this.state.columnData[columnId].todos.push(todo);\n          this.setState({ ...this.state\n          });\n          this.removePrevCard();\n          this.removeAddForm();\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleTodoCard\", {\n      editStart: this.createAddForm,\n      addStart: this.createAddForm,\n      confirmEditTodo: this.createTodoCard,\n      confirmAddTodo: this.createTodoCard\n    });\n\n    this.columns = {};\n    this.addForm = null;\n    this.prevCard = null;\n  }\n\n  setup() {\n    new Promise(resolve => resolve(mock)).then(res => {\n      const columnData = {};\n      Object.keys(res).forEach(key => columnData[key] = { ...res[key]\n      });\n      this.setState({\n        columnData\n      });\n    });\n  }\n\n  setChildren() {\n    this.clearChildren();\n    this.columns = {};\n\n    if (!this.state.columnData) {\n      return;\n    }\n\n    for (const key in this.state.columnData) {\n      this.columns[key] = new TodoColumn_TodoColumn('div', this.$target, {\n        class: ['column'],\n        dataset: {\n          columnId: key\n        },\n        columnData: this.state.columnData[key],\n        onDragEnd: this.setDragAndDropState\n      });\n    }\n  }\n\n  setEvent() {\n    this.addEvent('click', '.column', e => {\n      e.preventDefault();\n      const $column = e.target.closest('.column');\n      const $clickedTarget = e.target;\n\n      if ($clickedTarget.classList.contains('todo-add-btn')) {\n        this.addStart($column);\n      } else if ($clickedTarget.classList.contains('add-form-cancel')) {\n        this.cancelAddTodo();\n      } else if ($clickedTarget.classList.contains('add-form-submit')) {\n        this.confirmAddTodo($clickedTarget);\n      } else if ($clickedTarget.classList.contains('card-close-btn')) {\n        const $todoCard = $clickedTarget.closest('.todo-card');\n        this.modal ? this.closeModal() : this.openModal($todoCard);\n      }\n    });\n    this.addEvent('dblclick', '.todo-card', e => {\n      const $todoCard = e.target.closest('.todo-card');\n      this.editStart($todoCard);\n    });\n  }\n\n  addStart($column) {\n    const $parent = $column.querySelector('.todo-list');\n    const $beforeElement = $parent.querySelector('ul > li:first-child');\n    let $newAddForm = null; // 해당 컬럼이 add-form 이 아닌 경우 해당 컬럼에 add-form 생성\n\n    if (($beforeElement === null || $beforeElement === void 0 ? void 0 : $beforeElement.dataset.type) !== 'add') {\n      $newAddForm = this.handleTodoCard['addStart']({\n        $parent,\n        $beforeElement,\n        props: {\n          dataset: {\n            type: 'add'\n          }\n        }\n      }); // 기존에 열려있던 addForm 닫기\n\n      this.removeAddForm($newAddForm);\n      this.prevCard && this.handlePrevCard();\n    } // 해당 컬럼이 add-form 이었던 경우\n    else {\n      this.removeAddForm();\n    }\n  }\n\n  cancelAddTodo() {\n    this.removeAddForm();\n    this.handlePrevCard();\n  }\n\n  confirmAddTodo($addFormSubmitBtn) {\n    const $todoAddForm = $addFormSubmitBtn.closest('.todo-add-form');\n    const todo = {\n      title: $todoAddForm.querySelector('.add-form-title').value,\n      content: $todoAddForm.querySelector('.add-form-content').value\n    };\n    const $parent = $todoAddForm.parentNode;\n    this.handleTodoCard['confirmAddTodo']({\n      $parent,\n      $beforeElement: $todoAddForm,\n      props: {\n        todo,\n        todoId: $todoAddForm.dataset.todoId,\n        index: $todoAddForm.dataset.todoId\n      }\n    });\n  }\n\n  editStart($beforeElement) {\n    const props = {\n      type: 'edit',\n      title: $beforeElement.querySelector('h4').innerText,\n      content: $beforeElement.querySelector('.card-content').innerText,\n      dataset: {\n        todoId: $beforeElement.dataset.todoId,\n        index: $beforeElement.dataset.index,\n        type: 'edit'\n      }\n    };\n    const $parent = $beforeElement.parentNode;\n    const $newAddForm = this.handleTodoCard['editStart']({\n      $parent,\n      $beforeElement,\n      props\n    });\n    this.removeAddForm($newAddForm);\n    this.handlePrevCard($beforeElement);\n  }\n\n  removeAddForm($newAddForm) {\n    var _this$addForm, _this$addForm2;\n\n    (_this$addForm = this.addForm) === null || _this$addForm === void 0 ? void 0 : _this$addForm.$target.parentNode.removeChild((_this$addForm2 = this.addForm) === null || _this$addForm2 === void 0 ? void 0 : _this$addForm2.$target);\n    this.addForm = $newAddForm;\n  }\n\n  handlePrevCard($newPrevCard) {\n    if (this.prevCard) {\n      this.prevCard.style.display = 'list-item';\n    }\n\n    this.prevCard = $newPrevCard;\n    this.prevCard && (this.prevCard.style.display = 'none');\n  }\n\n  removePrevCard() {\n    this.prevCard && this.prevCard.parentNode.removeChild(this.prevCard);\n    this.prevCard = null;\n  }\n\n  createAddForm(_ref2) {\n    let {\n      $parent,\n      props = {},\n      $beforeElement\n    } = _ref2;\n    const classList = [...(props.class || []), 'todo-add-form'];\n    return new TodoContainer_TodoAddForm('li', $parent, { ...props,\n      class: [...classList, 'blocked']\n    }, $beforeElement);\n  }\n\n  openModal($todoCard) {\n    const removeCard = () => {\n      const columnId = $todoCard.closest('.column').dataset.columnId;\n      const todoId = $todoCard.dataset.todoId;\n      removeTodo(todoId).then(() => {\n        let index = -1;\n        this.state.columnData[columnId].todos = this.state.columnData[columnId].todos.filter(todo => {\n          if (todo.id === todoId) {\n            index = todo.index;\n          }\n\n          return todo.id !== todoId;\n        }).map(todo => {\n          if (index < todo.index) {\n            todo.index -= 1;\n          }\n\n          return todo;\n        });\n        this.setState({ ...this.state\n        });\n      });\n      this.closeModal();\n    };\n\n    this.modal = new modal('div', document.querySelector('body'), {\n      class: ['modal-container'],\n      removeCard,\n      closeModal: this.closeModal.bind(this)\n    });\n  }\n\n  closeModal() {\n    const $modal = this.modal.$target;\n    $modal.parentNode.removeChild($modal);\n    this.modal = null;\n  }\n\n}\n\n/* harmony default export */ const TodoContainer_TodoContainer = (TodoContainer);\n;// CONCATENATED MODULE: ./src/js/utils/logTypeMap.js\nfunction move(_ref) {\n  let {\n    todoTitle,\n    todoColumn,\n    nextTodoColumn\n  } = _ref;\n  return `${todoTitle}을/를 ${todoColumn}에서 ${nextTodoColumn}으로 이동하였습니다.`;\n}\n\nfunction add(_ref2) {\n  let {\n    todoTitle,\n    todoColumn\n  } = _ref2;\n  return `${todoColumn}에 ${todoTitle}을/를 등록하였습니다.`;\n}\n\nfunction remove(_ref3) {\n  let {\n    todoTitle,\n    todoColumn\n  } = _ref3;\n  return `${todoColumn}에서 ${todoTitle}을/를 삭제하였습니다.`;\n}\n\nconst logData2Desc = {\n  move: move,\n  add: add,\n  remove: remove\n};\n/* harmony default export */ const logTypeMap = (logData2Desc);\n;// CONCATENATED MODULE: ./src/js/utils/timeDiff.js\nfunction timeDiff(_ref) {\n  let {\n    date: createdAt\n  } = _ref;\n  const milliSeconds = new Date() - createdAt;\n  const seconds = milliSeconds / 1000;\n  if (seconds < 60) return `방금 전`;\n  const minutes = seconds / 60;\n  if (minutes < 60) return `${Math.floor(minutes)}분 전`;\n  const hours = minutes / 60;\n  if (hours < 24) return `${Math.floor(hours)}시간 전`;\n  const days = hours / 24;\n  if (days < 7) return `${Math.floor(days)}일 전`;\n  const weeks = days / 7;\n  if (weeks < 5) return `${Math.floor(weeks)}주 전`;\n  const months = days / 30;\n  if (months < 12) return `${Math.floor(months)}개월 전`;\n  const years = days / 365;\n  return `${Math.floor(years)}년 전`;\n}\n\n/* harmony default export */ const utils_timeDiff = (timeDiff);\n;// CONCATENATED MODULE: ./src/assets/user_avatar_img.svg\nconst user_avatar_img_namespaceObject = __webpack_require__.p + \"8d34a4791ea44e0658f2.svg\";\n;// CONCATENATED MODULE: ./src/js/components/TodoLog/TodoLog.js\n\n\n\n\n\nclass TodoLog extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  template() {\n    const {\n      type,\n      date\n    } = this.props.logData;\n    return `<img src=\"${user_avatar_img_namespaceObject}\" alt=\"Avatart\" />\n    <div class=\"log__content\">\n      <div class=\"user\">@sam</div>\n      <div class=\"log-content\">\n      \t${logTypeMap[type](this.props.logData)}\n      </div>\n      <div class=\"time\">${utils_timeDiff({\n      date\n    })}</div>\n    </div>`;\n  }\n\n}\n\n/* harmony default export */ const TodoLog_TodoLog = (TodoLog);\n;// CONCATENATED MODULE: ./src/js/components/TodoLog/TodoLogContainer.js\n\n\n\n\nclass TodoLogContainer extends core_Component {\n  constructor() {\n    super(...arguments);\n  }\n\n  setup() {\n    new Promise(resolve => resolve(logData)).then(res => {\n      this.setState({\n        logData: res\n      });\n    });\n  }\n\n  template() {\n    return `<header>\n      <button class=\"log-close-btn\"></button>\n\t\t\t</header>\n\t\t\t<ul class=\"log-list\"></ul>\n\t\t\t`;\n  }\n\n  setChildren() {\n    this.clearChildren();\n    console.log(this.state.logData);\n    this.state.logData && this.state.logData.forEach(item => new TodoLog_TodoLog('li', this.$target.querySelector('.log-list'), {\n      logData: item\n    }));\n  }\n\n  setEvent() {\n    this.addEvent('click', '.log-close-btn', () => this.$target.classList.remove('visible'));\n  }\n\n}\n\n/* harmony default export */ const TodoLog_TodoLogContainer = (TodoLogContainer);\n;// CONCATENATED MODULE: ./src/js/app.js\n\n\n\n\nclass App {\n  constructor($target) {\n    this.$target = $target;\n    this.$todoLogContainer = null;\n    this.setup();\n  }\n\n  setup() {\n    new components_Header('header', this.$target, {\n      class: ['header', 'hi'],\n      onClick: () => {\n        this.$todoLogContainer.$target.classList.add('visible');\n      }\n    });\n    new TodoContainer_TodoContainer('div', this.$target, {\n      class: ['todo-container']\n    });\n    this.$todoLogContainer = new TodoLog_TodoLogContainer('aside', this.$target, {\n      class: ['todo-log-container']\n    });\n  }\n\n}\n\n/* harmony default export */ const app = (App);\n;// CONCATENATED MODULE: ./src/js/index.js\n\n\nnew app(document.querySelector('.app'));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///623\n")}},__webpack_require__={};__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),(()=>{var n;__webpack_require__.g.importScripts&&(n=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var g=t.getElementsByTagName("script");g.length&&(n=g[g.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=n})();var __webpack_exports__={};__webpack_modules__[623](0,__webpack_exports__,__webpack_require__)})();